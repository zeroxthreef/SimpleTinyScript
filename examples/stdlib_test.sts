import stdlib.sts

function test_errors {
    print ============ testing the error system ==============
    stdlib-set-error test "something broke"

    print (stdlib-get-error)
    print should be no error: (stdlib-get-error)
}

function test_hashmap {
    print ============ testing hashmaps ==============
    local map_empty (hashmap)
    local map (hashmap key1 "hello world" key2 "hello world 2")

    print empty hashmap: (string-value-print $map_empty)
    print map with keys: (string-value-print $map)

    print getting a value from the hashmap: (hashmap-get $map key1)
    print attempting to get a value from a nonexistant key: (hashmap-get $map notkey)

    print testing that keys exist: (hashmap-exists $map key2)

    hashmap-set $map key2 "hi"

    print map with keys after setting key2: (string-value-print $map)

    hashmap-set $map key3 "hey"

    print map with keys after creating a new key: (string-value-print $map)

    hashmap-remove $map key1

    print map with keys after removing key1: (string-value-print $map)
}

function test_debug_string {
    print ============ testing debug strings ==============
    local res ""
    local var [array 1 2 3 $nil [array hello (function $nil arg0 arg1 {}) world [array a b c d e] [array hello?]] 4 5]

    set $res (string-value-print $var)

    print should be a debug print of var: $res
}

# all tests below =====

test_errors
test_hashmap
test_debug_string